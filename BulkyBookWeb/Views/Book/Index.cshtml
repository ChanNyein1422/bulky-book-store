@{
    var result = User.Identity.IsAuthenticated.ToString();
    var _userid = 0;
    var _role = "User";
    if (result == "True")
    {
        _userid = Convert.ToInt32(User.Claims.ToArray()[BulkyBookWeb.AuthServices.Auth.AuthDataIndex.Id].Value);
        _role = User.Claims.ToArray()[BulkyBookWeb.AuthServices.Auth.AuthDataIndex.Role].Value;
    }
}
<h3>Explore Our Books</h3>

<div class="ms-2">
        <div class="row">
        @if (_role == "Admin")
        {
            <div class="col-md-8 my-auto">
                <div class="input-group" style="height: 40px;">
                    <input type="text" id="search-form" placeholder="Search for books..." class="form-control" name="search_for_books">
                    <div class="input-group-text">
                        <i class="fas fa-search" onclick="search()"></i>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="ms-auto">
                    <button type="button" class="btn btn-light border-dark my-3" onclick="load_addform()">
                        + Upload Book
                    </button>
                </div>
            </div>
        }
        else
        {
            <div class="col-md-8 my-auto">
                <div>
                    <input type="text" id="search-form" style="height: 40px;" placeholder="Search for books..." class="form-control" name="search_for_books">
                </div>
             
            </div>
            <div class="col-md-2 my-auto">
                <div class="btn btn-light border rounded border-dark ms-3">
                    <i class="fas fa-search" onclick="search()"></i>
                </div>
            </div>
         }
        <div class="col-md-2 border rounded border-dark text-center py-2 d-flex flex-row">
            <div class="h6 my-auto me-3">Infinity Scroll: </div>
            <div class="my-auto">
                <input id="toggle-event" type="checkbox" data-toggle="toggle" data-size="small">
            </div>
        </div>
        
        </div>

        <div class="modal fade" id="addBookModal" tabindex="-1" aria-labelledby="addBookModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div id="formholder"></div>
                </div>
            </div>
        </div>

    <div class="modal fade" id="viewDetailModal" tabindex="-1" aria-labelledby="viewDetailModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div id="detailViewHolder"></div>
            </div>
        </div>
    </div>

  
    <div id="CategoryFilter"></div>

    <div class="d-flex flex-row my-3">
        <div class="h6 fw-bold me-3 my-auto">Sort By : </div>
        <div class="me-3">
            <select class="form-select" aria-label="Default select example" id="sort-select">
                <option value="Id" selected>Default</option>
                <option value="Title">Title</option>
                <option value="Author">Author</option>
                <option value="Price">Price</option>
                <option value="PublishDate">Published Date</option>
                <option value="UploadedDate">Uploaded Date</option>
            </select>
         </div>
        <div>
            <button class="btn btn-light border border-dark rounded" onclick="sort_books()">Sort</button>
        </div>
    </div>
    <div id="loading">
        <div class="spinner-border" role="status"></div>
        <span class="h3 ms-3"> Loading Books. Please Wait....</span>
    </div>
    <div id="bookView">

    </div>
      <div id="bookViewScroll">

    </div>
</div>



@section scripts{
    <script>
        "use strict";
        var page = 1,
        sortVal = "Id",
        sortDir = "asc",
        q = "",
        category = "",
        userid = @_userid;
        var pageSize;
        if('@_role' == "Admin"){
            pageSize = 9;
        }else{
            pageSize = 8;
        }
        var scroll_toggle = false;
        var shoppingCart = [];
        var hasResult = false;
        var isLoading = false;
        let timerId; //search delay
        var latterCategoryId = ""; //for unselecting prev category filter

        $(function () {
           
            $('.js-example-basic-multiple').select2();
            get_category_filter();
            get_book();
            initPaging("#bookView", get_book);
          

            $(window).scroll(function () {
                if (hasResult) {
                    var scrolltop = Math.round($(window).scrollTop());
                    var screenheight = $(document).height() - $(window).height();

                    if (!isLoading && hasResult) {
                        if (scrolltop + 1500 > screenheight || scrolltop === screenheight - 1) {
                            loadEndlessList();
                        }
                    }
                }
            }); 


            $("#search-form").typeahead({
                source:
                    function (query, process) {
                        return $.get('@Url.Action("GetBooksTitles","Book")', { q: query }, function (data) {
                            console.log(process(data));
                            return process(data);
                        });
                    }
            });


            $('#search-form').on('input', function () {
                clearTimeout(timerId);
                    // Delay the action by 500 milliseconds (adjust as needed)
                    timerId = setTimeout(() => {
                        // Do your desired action here
                        q = $(this).val();
                        page = 1;
                        if(scroll_toggle){
                             loadEndlessList("find");
                        }else{
                        get_book();
                        }
                    }, 1000);
               
            });
            $('#toggle-event').change(function () {
               // $('#console-event').html('Toggle: ' + $(this).prop('checked'));
               scroll_toggle = $(this).prop('checked');
                if (scroll_toggle) {
                   page = 1;
                    loadEndlessList();
                    console.log("Endless Mode.");
               }else{
                   page = 1;
                    get_book();
                    console.log("Paged Mode.");

               }
               
            });
        
        });
        // get book list
        function get_book() {
            $.ajax({
                cache: false,
                url: '@Url.Action("_BookList","Book")',
                data: {
                    page: page,
                    pageSize: pageSize,
                    sortVal: sortVal,
                    sortDir: sortDir,
                    q: q,
                    category: category,
                    userid: userid
                },
                success: function (result) {
                    $('#bookViewScroll').empty();
                    $("#loading").empty();
                  //  $('#bookView').show();
                    $("#bookView").empty().append(result);
                    total_order_count();
                    loaddisplayselected();
                   
                }
            });
        }

        function loadEndlessList(findoption) {

            $.ajax({
                cache: false,
                url: '@Url.Action("_BookListScroll", "Book")',
                data: {
                    page: page,
                    pageSize: pageSize,
                    sortVal: sortVal,
                    sortDir: sortDir,
                    q: q,
                    category: category,
                    userid: userid
                },
                beforeSend: function () {
                    isLoading = true;
                    hasResult = false
                },
                success: function (result) {
                    $('#bookView').empty();
                    if (result != null && result != "NoResult") {
                        hasResult = true;
                        if (findoption != "find") {
                            console.log("Scroll page"+page);
                            $('#bookViewScroll').append(result);
                        }
                        else {
                            $('#bookViewScroll').empty().append(result);
                        }
                    }
                    else if (result == "NoResult") {
                        if (findoption != "find") {
                            $('#bookViewScroll').append();
                        }
                        else {
                            $('#bookViewScroll').empty().append();
                        }
                        hasResult = false;
                        isLoading = false;
                    }

                },
                complete: function () {
                    if (hasResult) {
                        page = page + 1;
                    }
                    isLoading = false;
                    $("#loading").hide();

                }


            });



        }

        function filter_category(cat_title, id){
            $("#cat_filter_" + latterCategoryId).removeClass("btn-dark");
            $("#cat_filter_" + id).addClass("btn-dark");
            category = cat_title;
            page = 1;
            if(scroll_toggle){
                loadEndlessList('find');
            }else{
                 get_book();
            }
            latterCategoryId = id;
        }
          function search() {
            q = $('#search-form').val();
            page = 1;
            if (scroll_toggle) {
                loadEndlessList('find');
            } else {
                get_book();
            }
            
        }

        function sort_books(){
            sortVal = $('#sort-select').val();
            page = 1;

            if (scroll_toggle) {
                loadEndlessList();
            } else {
                get_book();
            }
        }

          function initPaging(div, callback) {
            $(div).on("click", ".pagedList a", function (e) {
                e.preventDefault();
                var $a = $(this).attr("href");
                try {
                    var pageurl = $a.split(/=/);
                    page = pageurl[1];
                    if (page == null) {
                        page = 1;
                    }
                }
                catch (e) {
                    page = 1;
                }
                callback();
            });
        }
        function get_category_filter(){
            $.ajax({
                cache: false,
                url: '@Url.Action("_CategoryFilterView","Category")',
                success: function (result) {
                    $("#CategoryFilter").empty().append(result);
                }
            });
        }

        function delete_book(id){
            $.ajax({
                cache: false,
                url: '@Url.Action("DeleteBook", "Book")',
                data: {id : id},
                success: function(response){
                    if (response == "Success"){
                        alert("Book Deleted");
                    }else{
                        alert("Delete Fail");
                    }
                },
                complete: function(){
                    if (scroll_toggle) {
                        loadEndlessList();
                    } else {
                        get_book();
                    }
                }
            });
        }

        function load_category(){
            $.ajax({
                cache: false,
                url: '@Url.Action("CategoryList","Category")',
                beforeSend: function(){
                },
                success: function(response){
                    $('#category_select').empty();           
                    for(var i = 0; i < response.length; i++){
                        $('#category_select').append(`<option value='${response[i].Category}'>${response[i].Category}</option>`);

                    }
                   
                },
                complete: function () {
                    $('#category_select').select2({
                        theme: 'bootstrap-5'
                    });
                }
            });
        }
        // ------ start view detail modal--------
        function load_detailform(id){
            popup_detail_modal(id, '#viewDetailModal', '#detailViewHolder', '@Url.Action("_BookDetail","Book")');
        }
        function popup_detail_modal(id, modal, formholder, url, callback) {
            $.ajax({
                cache: false,
                url: url,
                data: { Id: id },
                beforeSend: function () {
                    showmodal(modal)
                },
                success: function (result) {
                    $(formholder).empty().append(result);
                },
                complete: function () {
                }
            });
        }
        // ----- start add book form ---------
        function load_addform() {
            popup_add_modal('#addBookModal', '#formholder', '@Url.Action("_AddBook","Book")', form_submit);
        }


        function popup_add_modal(modal, formholder, url, callback) {
            $.ajax({
                cache: false,
                url: url,
                beforeSend: function () {
                    showmodal(modal)
                },
                success: function (result) {
                    $(formholder).empty().append(result);
                     load_category();
                    callback();
                },
                complete: function () {
                }
            });
        }
        function FileOnChange() {
          
            $('#upload').change(function () {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $("#bookUpload").val(e.target.result.split(",")[1]);
                    
                }
                reader.readAsDataURL(this.files[0]);

            });

            $('#thumbnail').change(function () {
                var input = this;
                var url = $(this).val();
                var ext = url.substring(url.lastIndexOf('.') + 1).toLowerCase();

                const QUALITY = 0.5;

                const canvas = document.getElementById('canvas');
                const ctx = canvas.getContext('2d');
                const imageInput = document.getElementById('thumbnail');

                const file = this.files[0];
                var reader = new FileReader();

                reader.onload = function (e) {
                    const img = new Image();
                    img.addEventListener('load', function () {
                        let width = img.width;
                        let height = img.height;


                        canvas.width = width;
                        canvas.height = height;

                        // Draw image on canvas with resized dimensions
                        ctx.drawImage(img, 0, 0, width, height);


                        // Get resized image data as a base64 encoded JPEG
                        //const resizedImage = canvas.toDataURL('image/jpeg');
                        //console.log(resizedImage);
                        canvas.toBlob(function (blob) {
                            const compressedFile = new File([blob], file.name, { type: file.type });
                            const finalcompressed = canvas.toDataURL('image/jpeg', 50 / 100);
                            $("#thumbnailUpload").val(finalcompressed.split(",")[1]);
                        }, file.type, QUALITY);
                    });
                    img.src = this.result;
                }
                reader.readAsDataURL(file);

            });
        }

        function form_submit() {
            FileOnChange();
            $('#addForm').submit(function (e) {
                e.preventDefault();
                
                $('#category_string').val($("#category_select").val().join(', '));
                $.ajax({
                    cache: false,
                    url: '@Url.Action("UpSert","Book")',
                    type: "Post",
                    data: $(this).serialize(),
                    beforeSend: function () {
                        $('.btn').prop("disabled", true);
                    },
                    success: function (myData) {
                        alert("New Book Added! ");
                        if (scroll_toggle) {
                            loadEndlessList();
                        } else {
                            get_book();
                        }
                    },
                    complete: function () {
                        hidemodal("#addBookModal");
                        $('.btn').prop("disabled", false);
                    }
                });

            });
        }

        function showmodal(div) {
            $(div).modal('show');
        }

        function hidemodal(div) {
            $(div).modal('hide');
        }

        //-------------   // ----- end add book form ---------

        // ----- start add to cart ---------
        function add_to_cart(bookid, bookname, price){

            var remove_button = `<a class="btn btn-danger btn-sm ms-2" onclick="remove_from_cart('${bookid}', '${bookname}', '${price}')">Remove</a>`;
            var obj = {
                "bookid": bookid,
                "bookname": bookname,
                "price": price,
                "quantity": parseInt($('#book_count_' + bookid).val())
            };

            shoppingCart.push(obj);
            localStorage.setItem("shoppingCart", JSON.stringify(shoppingCart));
            $("#shop_"+bookid).empty().append(remove_button);
            total_order_count();
        }
        function total_order_count(){
            var localDatas = localStorage.getItem("shoppingCart");
            if(localDatas != null){
            shoppingCart = JSON.parse(localDatas);
            $("#shopping_cart_icon").empty().append(shoppingCart.length);
            }
        }

        function remove_from_cart(bookid, bookname, price){

            var add_button = `<a class="btn btn-success btn-sm ms-2 btn-sm" onclick="add_to_cart('${bookid}', '${bookname}', '${price}')">
                                                            <i class="fa-solid fa-cart-shopping me-2"></i> ADD TO CART
                                                </a>`;
            var localDatas = localStorage.getItem("shoppingCart");
            shoppingCart = JSON.parse(localDatas);

            shoppingCart = shoppingCart.filter(function (el) { return el.bookid != bookid; });
            localStorage.setItem("shoppingCart", JSON.stringify(shoppingCart));
            $("#shop_" + bookid).empty().append(add_button);
            total_order_count();
            $('#book_count_' + bookid).val(1);
            $('#book_count_' + bookid).change();

        }


        function loaddisplayselected(){
            var localDatas = localStorage.getItem("shoppingCart");
            if(localDatas != null){
                shoppingCart = JSON.parse(localDatas);
                if (shoppingCart.length > 0) {
                    for (var i in shoppingCart) {
                        var remove_button = `<a class="btn btn-danger btn-sm ms-2" onclick="remove_from_cart('${shoppingCart[i].bookid}', '${shoppingCart[i].bookname} ', '${shoppingCart[i].price} ')">REMOVE</a>`;
                        $('#shop_' + shoppingCart[i].bookid).empty().append(remove_button);
                        $('#book_count_' + shoppingCart[i].bookid).val(shoppingCart[i].quantity);
                    }
                }
            }
         
        }

        // Plus - Minus Implementation
        function minus(id){
            var count = parseInt($('#book_count_'+id).val()) - 1;
            count = count < 1 ? 1 : count;
            $('#book_count_' + id).val(count);
            $('#book_count_' + id).change();
        }
        function plus(id){
            var count = parseInt($('#book_count_' + id).val()) + 1;
            count = count < 1 ? 1 : count;
            $('#book_count_' + id).val(count);
            $('#book_count_' + id).change();
            
        }

       // Add to Wishlist
        function add_to_wishlist(bookid, userid) {
            var obj = {
                "UserId": userid,
                "BookId": bookid
            }
            var added_icon = ` <a class="btn btn-light" onclick="remove_from_wishlist('${bookid}', '${userid}')">
                               <i class="fa-solid fa-heart"></i>
                                </a>`;
            $.ajax({
                cache: false,
                url: '@Url.Action("UpSert","WishList")',
                type: "Post",
                data: {
                   wishList: obj
                },
                success: function (data) {
                   if(data){
                      $("#wishList_"+bookid+userid).empty().append(added_icon);
                      var count = parseInt($("#wishlist_count_"+bookid).text());
                      if(count != null && count != NaN){
                          count++;
                          $("#wishlist_count_"+bookid).text(count);
                      }else{
                           $("#wishlist_count_"+bookid).text(1);
                      }
                    }
                },
                complete: function () {
                }
            });
       }
       function remove_from_wishlist(bookid, userid){
            var removed_icon = ` <a class="btn btn-light" onclick="add_to_wishlist('${bookid}', '${userid}')">
                             <i class="fa-regular fa-heart"></i>
                                 </a>`;
            $.ajax({
                cache: false,
                url: '@Url.Action("Delete","WishList")',
                data: {
                    userId : userid,
                    bookId : bookid
                },
                success: function (data) {
                    if (data == 1) {
                       $("#wishList_"+bookid+userid).empty().append(removed_icon);
                        var count = parseInt($("#wishlist_count_" + bookid).text());
                        if (count != null && count != NaN) {
                            count--;
                            $("#wishlist_count_" + bookid).text(count);
                        } else {
                            $("#wishlist_count_" + bookid).text(1);
                        }
                    }
                },
                complete: function () {
                   
                }
            });
       }

    </script>
}