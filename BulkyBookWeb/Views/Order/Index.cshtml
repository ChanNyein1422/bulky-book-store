@{
    var result = User.Identity.IsAuthenticated.ToString();
    var _userid = 0;
       if (result == "True")
    {
        _userid = Convert.ToInt32(User.Claims.ToArray()[BulkyBookWeb.AuthServices.Auth.AuthDataIndex.Id].Value);
    }
}
<p class="h3 fw-bold">Order Cart Receipt</p>

<div id="OrderDetail"></div>

<div class="row" id="order_div">
    <div class="col-md-7">
        <div id="Payment" class="border border-dark border-1 rounded rounded-3 mb-3 mt-3"></div>
        <a class="btn border border-dark text-dark" href="../Book/"> Back To Books </a>

    </div>
    <div class="col-12 col-md-5">
        <div class="justify-content-center text-center my-3 border rounded border-secondary" >
            <p class="h4 fw-bold my-3">Order Summary</p>
            <div id="order_summary">
                <p>Total Price: 0</p>
                <p>Discount : 0%</p>
                <p>Total Quantity: 0</p>
            </div>
          
            <div>
                <button class="btn btn-success my-3" onclick="make_order()">Order Now</button>
            </div>
        </div>
    </div>

</div>

@section scripts{
    <script>
        var shoppingCart = [];
        var payment_discount = 0;
        var payment_selected = false;
        $(function(){
            load_OrderDetails();
            load_payment();
        });
    

        function load_OrderDetails(){
            var localDatas = localStorage.getItem("shoppingCart");
            var totalPrice = 0;
            var singleBookTotal = 0;
            var totalQuantity = 0;
            if(localDatas != null){
                shoppingCart = JSON.parse(localDatas);
                var cartLength = shoppingCart.length;
            }
            var elements = "";
            if (shoppingCart.length > 0) {
                $('#Payment').show();
                $('#order_div').show();
                $("#shopping_cart_icon").empty().append(shoppingCart.length);
                elements += `<table class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Book ID</th>
                    <th scope="col">Title</th>
                    <th scope="col">Quantity</th>
                    <th scope="col">Quantity Price</th>
                    <th scope="col">Total Price</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>`;
                for(var i in shoppingCart){
                    singleBookTotal = parseFloat(shoppingCart[i].price) * parseFloat(shoppingCart[i].quantity);
                     
                    elements += `<tr id="${shoppingCart[i].bookid}">
                                    <th scope="row">${shoppingCart[i].bookid}</th>
                                    <td>${shoppingCart[i].bookname}</td>
                                    <td>
                                        <div class="d-flex flex-row">
                                            <a class="btn btn-light border rounded border-dark ms-2 btn-sm" onclick="minus(${i}, ${shoppingCart[i].bookid})">
                                                -
                                            </a>
                                            <input type="text"  id="book_count_${shoppingCart[i].bookid}" value="${shoppingCart[i].quantity}" class="form-control form-control-sm ms-2 text-center" style="width: 40px;" disabled/>

                                            <a class="btn btn-light border rounded border-dark ms-2 btn-sm" onclick="plus(${i}, ${shoppingCart[i].bookid})">
                                                +
                                            </a>
                                        </div>
                                    </td>
                                    <td>${shoppingCart[i].price}</td>
                                    <td>${singleBookTotal}</td>
                                    <td><a class="link-danger" onclick="remove_from_cart(${shoppingCart[i].bookid})"><i class="fa fa-times" class="" aria-hidden="true"></i></a> </td>
                                    </tr>`;
                    totalPrice += singleBookTotal;
                    totalQuantity += shoppingCart[i].quantity;
                }
                elements += ` </tbody>
                        </table>`;
                totalPrice = totalPrice - (totalPrice * payment_discount);
                var discount_display = payment_discount * 100;



                $('#order_summary').empty().append(`
                                        <p>Total Price: ${totalPrice}</p>
                                        <p>Discount : ${discount_display} %</p>
                                        <p>Total Quantity: ${totalQuantity}</p>`)

            }else{

                $('#Payment').hide();
                $('#order_div').hide();
                elements += `<p class='h4 mt-5'>No Order Here Yet.</p>
                    <a class="btn border border-dark text-dark" href="../Book/"> Choose Your Books Here </a>
                `;
            }
            $("#OrderDetail").empty().append(elements);

           
        }
        function load_payment(){
            $.ajax({
                cache: false,
                url: '@Url.Action("_PaymentView","Order")',
                success: function (result) {
                    if (result != null) {
                        $("#Payment").empty().append(result);
                    }
                },
                complete: function () {

                }
            });
        }

        function make_order(){
            if(payment_selected){
                var localDatas = localStorage.getItem("shoppingCart");
                shoppingCart = JSON.parse(localDatas);
                var cartLength = shoppingCart.length;

                if (cartLength > 0) {
                    var objArr = [];
                    for (var i in shoppingCart) {
                        var obj = {
                            "BookId": shoppingCart[i].bookid,
                            "UserId": @_userid,
                            "Count": parseInt(shoppingCart[i].quantity),
                            "Discount": payment_discount
                        }
                        objArr.push(obj);
                    }

                    $.ajax({
                        cache: false,
                        url: '@Url.Action("UpSertList","Order")',
                        type: "Post",
                        data: { orders: objArr },
                        beforeSend: function () {

                        },
                        success: function (myData) {
                            if (myData != null) {
                                alert("Order Added");
                            }
                        },
                        complete: function () {
                            localStorage.removeItem("shoppingCart");
                            window.location = "../Book/Index";

                        }
                    });

                }
            } else {
                var warning = `Please select payment method. *`;
                $("#payment_select_warning").empty().append(warning);
            }
           
        }
        function remove_from_cart(bookid) {

            var localDatas = localStorage.getItem("shoppingCart");
            if(localDatas != null){
                shoppingCart = JSON.parse(localDatas);
                shoppingCart = shoppingCart.filter(function (el) { return el.bookid != bookid; });
                localStorage.setItem("shoppingCart", JSON.stringify(shoppingCart));
            }
            load_OrderDetails();
        }
       //adjust to quantity

        function minus(i, id) {
            var count = parseInt($('#book_count_' + id).val()) - 1;
            count = count < 1 ? 1 : count;
            var localDatas = localStorage.getItem("shoppingCart");
            if (localDatas != null) {
                shoppingCart = JSON.parse(localDatas);
                shoppingCart[i].quantity = count;
                localStorage.setItem("shoppingCart", JSON.stringify(shoppingCart));

            }
            load_OrderDetails();
           
        }
        function plus(i, id) {
            var count = parseInt($('#book_count_' + id).val()) + 1;
            count = count < 1 ? 1 : count;
            var localDatas = localStorage.getItem("shoppingCart");
            if (localDatas != null) {
                shoppingCart = JSON.parse(localDatas);
                shoppingCart[i].quantity = count;
                localStorage.setItem("shoppingCart", JSON.stringify(shoppingCart));

            }
            load_OrderDetails();

        }
        // payment type

        function add_payment(type, discount){
            $('.div_card').removeClass('border-primary border-2');
            $('#payment_select_warning').empty();
            $('#' + type).addClass('border-primary border-2');
            payment_discount = discount;
            payment_selected = true;
            load_OrderDetails();
        }
    </script>
}